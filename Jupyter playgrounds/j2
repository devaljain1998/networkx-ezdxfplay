{"cells":[{"cell_type":"code","execution_count":1,"metadata":{},"outputs":[],"source":"import shapely"},{"cell_type":"code","execution_count":2,"metadata":{},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(33.1, 32.9)"]},"metadata":{},"execution_count":2}],"source":"round(33.1, 1), round(32.9, 1)"},{"cell_type":"code","execution_count":3,"metadata":{},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(33, 33)"]},"metadata":{},"execution_count":3}],"source":"round(33.1), round(32.9)"},{"cell_type":"code","execution_count":4,"metadata":{},"outputs":[],"source":"from shapely.ops import unary_union\n\nlines = [\n    ((0, 0), (0, 7)),\n    ((0, 5), (0, 10)),\n]"},{"cell_type":"code","execution_count":5,"metadata":{},"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"'tuple' object has no attribute '_geom'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-8a77c92f51d0>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mline_union\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0munary_union\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlines\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m~/Projects/PillarPlus/pillarenv/lib/python3.8/site-packages/shapely/ops.py\u001b[0m in \u001b[0;36munary_union\u001b[0;34m(self, geoms)\u001b[0m\n\u001b[1;32m    150\u001b[0m         \u001b[0msubs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mc_void_p\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mL\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    151\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mg\u001b[0m \u001b[0;32min\u001b[0m \u001b[0menumerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgeoms\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 152\u001b[0;31m             \u001b[0msubs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_geom\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    153\u001b[0m         \u001b[0mcollection\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlgeos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mGEOSGeom_createCollection\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m6\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msubs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mL\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    154\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mgeom_factory\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlgeos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmethods\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'unary_union'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcollection\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: 'tuple' object has no attribute '_geom'"]}],"source":"line_union = unary_union(lines)"},{"cell_type":"code","execution_count":6,"metadata":{},"outputs":[],"source":"from shapely.geometry import LineString"},{"cell_type":"code","execution_count":7,"metadata":{},"outputs":[],"source":"lines = list(map(LineString, lines))"},{"cell_type":"code","execution_count":8,"metadata":{},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<shapely.geometry.linestring.LineString at 0x7fbb45d1faf0>,\n"," <shapely.geometry.linestring.LineString at 0x7fbb45d1fb80>]"]},"metadata":{},"execution_count":8}],"source":"lines"},{"cell_type":"code","execution_count":10,"metadata":{},"outputs":[],"source":"line_union = unary_union(lines)"},{"cell_type":"code","execution_count":11,"metadata":{},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<shapely.geometry.multilinestring.MultiLineString at 0x7fbb45d46d30>"],"image/svg+xml":"<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"100.0\" height=\"100.0\" viewBox=\"-0.4 -0.4 0.8 10.8\" preserveAspectRatio=\"xMinYMin meet\"><g transform=\"matrix(1,0,0,-1,0,10.0)\"><g><polyline fill=\"none\" stroke=\"#66cc99\" stroke-width=\"0.21600000000000003\" points=\"0.0,0.0 0.0,5.0\" opacity=\"0.8\" /><polyline fill=\"none\" stroke=\"#66cc99\" stroke-width=\"0.21600000000000003\" points=\"0.0,5.0 0.0,7.0\" opacity=\"0.8\" /><polyline fill=\"none\" stroke=\"#66cc99\" stroke-width=\"0.21600000000000003\" points=\"0.0,7.0 0.0,10.0\" opacity=\"0.8\" /></g></g></svg>"},"metadata":{},"execution_count":11}],"source":"line_union"},{"cell_type":"code","execution_count":12,"metadata":{},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'MULTILINESTRING ((0 0, 0 5), (0 5, 0 7), (0 7, 0 10))'"]},"metadata":{},"execution_count":12}],"source":"line_union.wkt"},{"cell_type":"code","execution_count":13,"metadata":{},"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"unexpected EOF while parsing (<ipython-input-13-b64874dd23ba>, line 1)","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-13-b64874dd23ba>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    for line in line_union:\u001b[0m\n\u001b[0m                           ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m unexpected EOF while parsing\n"]}],"source":"for line in line_union:"},{"cell_type":"code","execution_count":14,"metadata":{},"outputs":[{"output_type":"stream","name":"stdout","text":["LINESTRING (0 0, 0 5) LINESTRING (0 0, 0 5)\nLINESTRING (0 5, 0 7) LINESTRING (0 5, 0 7)\nLINESTRING (0 7, 0 10) LINESTRING (0 7, 0 10)\n"]}],"source":"for line in line_union:\n    print(line, line.wkt)"}],"nbformat":4,"nbformat_minor":2,"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":3},"orig_nbformat":2}}